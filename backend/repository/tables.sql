-- Characters Table
CREATE TABLE IF NOT EXISTS Characters (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255),
    description TEXT,
    modified TIMESTAMPTZ,
    thumbnail_path VARCHAR(255),
    thumbnail_extension VARCHAR(10)
);

-- Comics Table
CREATE TABLE IF NOT EXISTS Comics (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    digitalId INT UNIQUE,
    title VARCHAR(255) UNIQUE,
    description TEXT,
    variantDescription TEXT,
    isseuNumber INT,
    modified TIMESTAMPTZ NOT NULL,
    pageCount INT NOT NULL,
    url TEXT,
    thumbnail_path VARCHAR(255),
    thumbnail_extension VARCHAR(10),
    text TEXT,
    series_id REFERENCES Series(id)
);

-- Writers Table
CREATE TABLE IF NOT EXISTS Writers (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    fullname VARCHAR(150),
    firstname VARCHAR(50),
    lastname VARCHAR(50)
);

-- Comic_Writers Table (Many to Many relationship)
CREATE TABLE IF NOT EXISTS Comic_Writers (
    comic_id INT REFERENCES Comics(id),
    writer_id INT REFERENCES Writers(id),
    role varchar(50),
    PRIMARY KEY (comic_id, writer_id)
);

-- Series Table
CREATE TABLE IF NOT EXISTS Series (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(255) UNIQUE,
    description TEXT,
    startYear INT,
    endYear INT,
    modified TIMESTAMPTZ NOT NULL,
    thumbnail_path VARCHAR(255),
    thumbnail_extension VARCHAR(10),
);

-- Series_Writers Table (Many to Many relationship)
CREATE TABLE IF NOT EXISTS Series_Writers (
    series_id INT REFERENCES Series(id),
    writer_id INT REFERENCES Writers(id),
    role varchar(50),
    PRIMARY KEY (series_id, writer_id)
);

-- URLs Table
CREATE TABLE IF NOT EXISTS URLs (
    id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    character_id INT REFERENCES Characters(id),
    type VARCHAR(50),
    url VARCHAR(255)
);

-- Join table for Characters and Comics (many-to-many relationship)
CREATE TABLE IF NOT EXISTS Character_Comics (
    character_id INT REFERENCES Characters(id),
    comic_id INT REFERENCES Comics(id),
    PRIMARY KEY (character_id, comic_id)
);

-- Join table for Characters and Series (many-to-many relationship)
CREATE TABLE IF NOT EXISTS Character_Series (
    character_id INT REFERENCES Characters(id),
    series_id INT REFERENCES Series(id),
    PRIMARY KEY (character_id, series_id)
);
